#!/bin/bash
set -xeuo pipefail

ffmpeg="${HOME}/bin/ffmpeg"

if [ ! -e "${ffmpeg}" ]; then
  sudo apt-get install --no-install-recommends -y \
    build-essential \
    cmake \
    libfdk-aac-dev \
    libgnutls28-dev \
    libnuma-dev \
    libunistring-dev \
    pkg-config \

  x265pkg="${HOME}/ffmpeg_build/lib/pkgconfig/x265.pc"
  x265Sources="${HOME}/dev/x265"
  if [ ! -e "${x265pkg}" ]; then
    if [ ! -e "${x265Sources}" ]; then      
      wget -O - https://bitbucket.org/multicoreware/x265_git/get/3.5.tar.bz2 | tar xj -C "$(dirname ${x265Sources})"
      mv "$(dirname ${x265Sources})"/multicoreware-* "${x265Sources}"
    fi
    pushd "${x265Sources}/build/linux"
    PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build" -DENABLE_SHARED=off ../../source
    PATH="$HOME/bin:$PATH" make -j$(nproc)
    make install
    popd
  fi

  ffmpegSources="${HOME}/ffmpeg-sources"
  if [ ! -e "${ffmpegSources}" ]; then
    mkdir -p "${ffmpegSources}"
  fi
  cd "${ffmpegSources}"
  if [ ! -e "ffmpeg-6.1.1" ]; then
    ffmpegArchive="ffmpeg-6.1.1.tar.xz"
    ffmpegArchiveTmp="$(mktemp)"
    wget -O "${ffmpegArchiveTmp}" "https://ffmpeg.org/releases/${ffmpegArchive}"
    mv "${ffmpegArchiveTmp}" "${ffmpegArchive}"
    tar xvf "${ffmpegArchive}"
  fi
  cd "ffmpeg-6.1.1"
  PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --prefix="$HOME/ffmpeg_build"  --pkg-config-flags="--static"   --extra-cflags="-I$HOME/ffmpeg_build/include"   --extra-ldflags="-L$HOME/ffmpeg_build/lib"   --extra-libs="-lpthread -lm"   --ld="g++"   --bindir="$HOME/bin"   --enable-gpl   --enable-gnutls   --enable-libfdk-aac   --enable-libx265   --enable-nonfree
  PATH="$HOME/bin:$PATH" make -j$(nproc)
  make install
  hash -r
fi

if [ $# -ne 1 ]; then
  echo "usage: $0 <episode id>"
  exit 1
fi
epid="$1"

final="${epid}.mp4"

if [ -e "${final}" ]; then
  echo "final output file already exists: ${final}"
  exit 1
fi

source="${epid}.source.mp4"

if [ ! -e "${source}" ]; then
  sourceTmp="$(mktemp)"
  wget -O "${sourceTmp}" "https://archive.org/download/tt0062588_202201/${epid}.mp4"
  mv "${sourceTmp}" "${source}"
fi

wav="${epid}.wav"

if [ ! -e "${wav}" ]; then
  wavTmp="$(mktemp)"
  "${ffmpeg}" -i "${source}" -ar 16000 -ac 1 -c:a pcm_s16le -f wav -y "${wavTmp}"
  mv "${wavTmp}" "${wav}"
fi

srt="${epid}.srt"

if [ ! -e "${srt}" ]; then
  "~/dev/mrnfmt/venv/bin/python" ~/dev/mrnfmt/transcribe.py "${wav}" "${srt}"
fi
# -filter:v "crop=1440:1080:240:0,scale=640:480"

# So for some reason encoding directly with -c:v libx265 isn't working so we'll encode everything separately
h265="${epid}.h265"
if [ ! -e "${h265}" ]; then
  h265Tmp="$(mktemp)"
  "${ffmpeg}" -i "${source}" -filter:v "crop=1440:1080:240:0,scale=640:480" -f yuv4mpegpipe pipe:1 | ~/ffmpeg_build/bin/x265 --input - --y4m --crf 25 --preset "${FFMPEG_VIDEO_PRESET:-slow}" --output "${h265Tmp}"
  mv "${h265Tmp}" "${h265}"
fi

m4a="${epid}.m4a"
if [ ! -e "${m4a}" ]; then
  m4aTmp="$(mktemp)"
  "${ffmpeg}" -i "${source}" -vn -c:a libfdk_aac -vbr 3 -f mp4 -y "${m4aTmp}"
  mv "${m4aTmp}" "${m4a}"
fi

finalTmp="$(mktemp)"
"${ffmpeg}" \
  -i "${h265}" \
  -i "${m4a}" \
  -i "${srt}" \
  -c:v copy \
  -c:a copy -metadata:s:a:0 language=eng \
  -c:s mov_text -metadata:s:s:0 language=eng \
  -f mp4 -movflags faststart \
  -y "${finalTmp}"
mv "${finalTmp}" "${final}"
